---
import { type CollectionEntry, getCollection } from 'astro:content';

import BaseLayout from '../../layouts/BaseLayout.astro';

import ContactCTA from '../../components/ContactCTA.astro';
import Hero from '../../components/Hero.astro';
import Icon from '../../components/Icon.astro';
import Pill from '../../components/Pill.astro';
import { render } from 'astro:content';

interface Props {
	entry: CollectionEntry<'work'>;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
	const work = await getCollection('work');
	return work.map((entry) => ({
		params: { slug: entry.id },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content } = await render(entry);
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
	<div class="stack gap-20">
		<div class="stack gap-15">
			<header>
				<div class="wrapper stack gap-2">
					<a class="back-link" href="/work/" aria-label="Back to Work">
						<Icon icon="arrow-left" /> Work
					</a>
					<Hero title={entry.data.title} align="start">
						<div class="details">
							<div class="tags">
								{entry.data.tags.map((t, index) => (
									<Pill key={index}>{t}</Pill>
								))}
							</div>
							<p class="description">{entry.data.description}</p>
						</div>
					</Hero>
				</div>
			</header>

			<main class="wrapper">
				<div class="stack gap-10 content">
					{entry.data.img &&
						<div class="image-gallery">
							{entry.data.img.map((image, index) => (
								<img
									key={index}
									src={image}
									alt={entry.data.img_alt && entry.data.img_alt[index] ? entry.data.img_alt[index] : ''}
									loading="lazy"
									decoding="async"
								/>
							))}
						</div>
					}
					<div class="content">
						<Content />
					</div>
				</div>
			</main>
		</div>
		<ContactCTA />
	</div>
</BaseLayout>

<style>
	header {
		padding-bottom: 2.5rem;
		border-bottom: 1px solid var(--gray-800);
	}

	.back-link {
		display: block;
		align-self: flex-start;
		font-size: var(--text-md);
		color: var(--gray-400);
		text-decoration: none;
	}

	.back-link:hover,
	.back-link:focus {
		color: var(--gray-200);
		text-decoration: underline;
	}

	.details {
		display: flex;
		flex-direction: column;
		align-items: flex-start;
		gap: 1.5rem;
	}

	.tags {
		display: flex;
		flex-wrap: wrap;
		gap: 0.5rem;
	}

	.description {
		font-size: var(--text-md);
		line-height: 1.6;
		color: var(--gray-300);
		max-width: 60ch;
	}

	.image-gallery {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
		gap: 1rem;
		margin-top: 1.5rem;
	}

	.image-gallery img {
		width: 100%;
		border-radius: 1rem;
		box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
		background-color: var(--gray-900);
		transition: transform 0.3s ease, box-shadow 0.3s ease;
	}

	.image-gallery img:hover {
		transform: scale(1.05);
		box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
	}

	.content {
		max-width: 65ch;
		margin-inline: auto;
	}

	.content > :global(* + *) {
		margin-top: 1rem;
	}

	.content :global(h1),
	.content :global(h2),
	.content :global(h3),
	.content :global(h4),
	.content :global(h5) {
		margin: 1.5rem 0;
	}

	.content :global(img) {
		border-radius: 1rem;
		box-shadow: var(--shadow-sm);
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
	}

	.content :global(blockquote) {
		font-size: var(--text-md);
		font-family: var(--font-brand);
		font-weight: 600;
		line-height: 1.1;
		padding-inline-start: 1.5rem;
		border-inline-start: 0.25rem solid var(--accent-dark);
		color: var(--gray-0);
		margin: 2rem 0;
	}

	.content :global(a) {
		color: var(--accent);
		text-decoration: underline;
		transition: color 0.3s ease;
	}

	.content :global(a:hover),
	.content :global(a:focus) {
		color: var(--accent-dark);
	}

	@media (min-width: 50em) {
		.details {
			flex-direction: row;
			gap: 2.5rem;
			align-items: center;
		}

		.description {
			font-size: var(--text-lg);
		}

		.content :global(blockquote) {
			font-size: var(--text-xl);
		}

		.image-gallery {
			grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
		}
	}
</style>
